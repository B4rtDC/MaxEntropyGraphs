var documenterSearchIndex = {"docs":
[{"location":"derivedquantities/#Derived-Quantities","page":"Derived Quantities","title":"Derived Quantities","text":"","category":"section"},{"location":"GPU/#GPU","page":"GPU acceleration","title":"GPU","text":"","category":"section"},{"location":"GPU/","page":"GPU acceleration","title":"GPU acceleration","text":"Most methods can be translated to GPU computation directly thanks to the CUDA.jl environment.","category":"page"},{"location":"models/#Models","page":"Models","title":"Models","text":"","category":"section"},{"location":"models/","page":"Models","title":"Models","text":"The different models that are available are described below. Each of these models is a subtype of an AbstractMaxEntropyModel","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"MaxEntropyGraphs.AbstractMaxEntropyModel","category":"page"},{"location":"models/#MaxEntropyGraphs.AbstractMaxEntropyModel","page":"Models","title":"MaxEntropyGraphs.AbstractMaxEntropyModel","text":"AbstractMaxEntropyModel\n\nAn abstract type for a MaxEntropyModel. Each model has one or more structural constraints   that are fixed while the rest of the network is completely random. \n\nThe different functions below should be implemented in the subtypes.\n\n\n\n\n\n","category":"type"},{"location":"models/#UBCM","page":"Models","title":"UBCM","text":"","category":"section"},{"location":"models/","page":"Models","title":"Models","text":"MaxEntropyGraphs.UBCM","category":"page"},{"location":"models/#MaxEntropyGraphs.UBCM","page":"Models","title":"MaxEntropyGraphs.UBCM","text":"UBCM\n\nMaximum entropy model for the Undirected Binary Configuration Model (UBCM). \n\nThe object holds the maximum likelihood parameters of the model (x), the expected adjacency matrix (G),  and the variance for the elements of the adjacency matrix (σ).\n\n\n\n\n\n","category":"type"},{"location":"models/","page":"Models","title":"Models","text":"This type can be instantiated with the following methods:","category":"page"},{"location":"models/#DBCM","page":"Models","title":"DBCM","text":"","category":"section"},{"location":"models/","page":"Models","title":"Models","text":"MaxEntropyGraphs.DBCM","category":"page"},{"location":"models/#MaxEntropyGraphs.DBCM","page":"Models","title":"MaxEntropyGraphs.DBCM","text":"DBCM\n\nMaximum entropy model for the Directed Binary Configuration Model (DBCM). \n\nThe object holds the maximum likelihood parameters of the model (x, y), the expected adjacency matrix (G),  and the variance for the elements of the adjacency matrix (σ).\n\n\n\n\n\n","category":"type"},{"location":"exact/#Analytical","page":"Analytical","title":"Analytical","text":"","category":"section"},{"location":"exact/#Expected-value","page":"Analytical","title":"Expected value","text":"","category":"section"},{"location":"exact/","page":"Analytical","title":"Analytical","text":"Using the maximum likelihood method method the expected value for any topological property X can be computed from the expected values in the adjacency matrix of the graph G (this approximation ignores the second and higher order terms in the multidimensional Taylor expansion of X).","category":"page"},{"location":"exact/","page":"Analytical","title":"Analytical","text":"math X left( G right)  =  X left( left G right right)","category":"page"},{"location":"exact/#Variance","page":"Analytical","title":"Variance","text":"","category":"section"},{"location":"exact/","page":"Analytical","title":"Analytical","text":"The variance of a topological property S can be written as follows","category":"page"},{"location":"exact/","page":"Analytical","title":"Analytical","text":"math sigma ^2 left X right = sum_ij sum_ts sigma leftg_ij g_ts right left(  fracpartial Xpartial g_ij fracpartial Xpartial g_ts  right)_G = left G right","category":"page"},{"location":"exact/","page":"Analytical","title":"Analytical","text":"where","category":"page"},{"location":"exact/","page":"Analytical","title":"Analytical","text":"sigma left g_ij g_ts right = left g_ijg_tsright - left g_ijrightleft g_tsright","category":"page"},{"location":"exact/","page":"Analytical","title":"Analytical","text":"Using the appropriate expressions for  left g_ij right (depending on the model considered, cf. examples), a highly reliable estimate for the variance of the metric can be obtained.","category":"page"},{"location":"simulated/#Simulation","page":"Simulation","title":"Simulation","text":"","category":"section"},{"location":"simulated/","page":"Simulation","title":"Simulation","text":"The analytical method can quickly become expensive to compute since each element in the adjacency matrix has a non-zero value. It is also possible to obtain an estimate of both the metric and its variance using Monte Carlo simulation.  ","category":"page"},{"location":"#MaxEntropyGraphs.jl","page":"Home","title":"MaxEntropyGraphs.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for MaxEntropyGraphs.jl","category":"page"},{"location":"","page":"Home","title":"Home","text":"MaxEntropyGraphs","category":"page"},{"location":"#MaxEntropyGraphs","page":"Home","title":"MaxEntropyGraphs","text":"MaxEntropyGraphs\n\nJulia module for working with maximum entropy graphs\n\n\n\n\n\n","category":"module"}]
}
